{"version":3,"sources":["serviceWorker.js","database/config.js","components/NoteStart.jsx","components/Note.jsx","components/NoteForm.jsx","components/NoteAvatar.jsx","App.js","components/Fileupload.jsx","Start.js","index.js"],"names":["Boolean","window","location","hostname","match","fireConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","NoteStart","handleAuth","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","console","log","user","email","catch","error","code","message","handleAuthFace","FacebookAuthProvider","handleAuthEmailAndPass","textEmail","value","pass","textPass","signInWithEmailAndPassword","createUserWithEmailAndPassword","className","src","required","ref","input","type","placeholder","onClick","this","Component","Note","props","handleRemove","id","confirm","removeNote","Update","newContent","prompt","date","Date","dia","getDate","mes","getMonth","hora","getHours","min","getMinutes","db","child","update","noteContent","edited","database","noteId","file","state","notes","key","NoteForm","addNote","textInput","focus","NoteAvatar","getDataUser","currentUser","accessToken","name","displayName","photo","photoURL","App","remove","note","push","set","noteUid","uid","logOut","signOut","prevNotes","on","snap","val","setState","i","length","splice","useruid","title","map","updateNote","reverse","Start","authListener","onAuthStateChanged","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4cd6e7b6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase';\n\n const config = {\n\n    apiKey: \"AIzaSyCJQg7CG7ZOGa3_95qwdAl08lZs22v7uiE\",\n    authDomain: \"notesinreact.firebaseapp.com\",\n    databaseURL: \"https://notesinreact.firebaseio.com\",\n    projectId: \"notesinreact\",\n    storageBucket: \"gs://notesinreact.appspot.com/\",\n    messagingSenderId: \"328441495789\",\n    appId: \"1:328441495789:web:1c7f336517167d03\"\n\n}\n\nconst fireConfig = firebase.initializeApp(config)\n\nexport default fireConfig;","import React, { Component } from \"react\";\nimport \"./NoteStart.css\";\nimport firebase from \"firebase\";\n//import 'firebase/auth';\nimport fireConfig from \"../database/config\";\n\nclass NoteStart extends Component {\n  constructor() {\n    super();\n  }\n\n  handleAuth = () => {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    provider.addScope(\"https://www.googleapis.com/auth/plus.login\");\n\n    fireConfig\n      .auth()\n      .signInWithPopup(provider)\n\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.log(`Error ${error.code}: ${error.message} `));\n  };\n\n  handleAuthFace = () => {\n    let provider = new firebase.auth.FacebookAuthProvider();\n    provider.addScope(\"public_profile\");\n\n    fireConfig\n      .auth()\n      .signInWithPopup(provider)\n      .then(result => console.log(`${result.user.email} ha iniciado sesión`))\n      .catch(error => console.log(`Error ${error.code}: ${error.message} `));\n  };\n\n  handleAuthEmailAndPass = () => {\n    let email = this.textEmail.value;\n    let pass = this.textPass.value;\n\n    fireConfig\n      .auth()\n      .signInWithEmailAndPassword(email, pass)\n      .then(() => {\n        console.log(\"login successful\");\n      })\n      .catch(error => {\n        fireConfig\n          .auth()\n          .createUserWithEmailAndPassword(email, pass)\n          .then(() => console.log(\"register has been successful\"))\n          .catch(error => console.log(error));\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"NotesStart\">\n        <center>\n          <h2>Don´t forget-App</h2>\n\n          <h4>Your personal app notes</h4>\n        </center>\n\n        <img\n          src=\"https://media.tenor.com/images/3cfad63c022113f11ffb8d164692cef7/tenor.gif\"\n          className=\"catImage\"\n        />\n        <form>\n          <input\n            required\n            ref={input => {\n              this.textEmail = input;\n            }}\n            type=\"text\"\n            placeholder=\"Type your email\"\n          />\n          <br />\n          <input\n            required\n            ref={input => {\n              this.textPass = input;\n            }}\n            type=\"password\"\n            placeholder=\"Type your password\"\n          />\n          <br />\n          <input\n            onClick={this.handleAuthEmailAndPass}\n            type=\"Button\"\n            value=\"Sign In\"\n          />\n          <br />\n        </form>\n\n        <h3>Login with</h3>\n        <input onClick={this.handleAuthFace} value=\"Facebook\" type=\"button\" />\n        <br />\n        <input onClick={this.handleAuth} value=\"Google\" type=\"button\" />\n      </div>\n    );\n  }\n}\n\nexport default NoteStart;\n","import React,{Component} from 'react';\nimport './Note.css';\nimport fireConfig from '../database/config';\n\n\n\nclass Note extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.db = fireConfig.database().ref().child('notes'); \n\n        this.noteId = props.noteId;\n        this.noteContent = props.noteContent;\n        this.date = props.date;\n        this.removeNote = props.removeNote;\n        this.edited = props.edited;\n        this.file = props.file;\n\n\n            this.state ={\n            notes: []\n            }\n        \n    }\n\n    handleRemove =(id)=>{\n\n       const userResponse = window.confirm('¿Estás seguro de que quieres eliminar la nota?');\n\n        if(userResponse){\n            this.props.removeNote(id)\n        }\n        else{\n            return;\n        }        \n\n    }\n\n    Update = (id) =>{\n\n       const newContent = prompt(\"Edit your note\");\n\n    var date = new Date();\n    var dia = date.getDate();\n    var mes = date.getMonth()+1;\n    var hora = date.getHours();\n    var min = date.getMinutes();\n\n        this.db.child(id).update({noteContent: newContent,\n        edited: dia+\"/\"+mes+\" \"+hora+\":\"+min, });  \n\n    }\n\n\n\n\n\n    render(props){\n\n        \n        return(\n\n            <div key= {this.noteId} className=\"Note\">\n               <input onClick={()=>this.Update(this.noteId)} id= \"edit\" type=\"image\" src = \"https://www.pinclipart.com/picdir/big/8-89038_big-image-editing-clip-art-png-download.png\"/>\n                <input onClick= {()=>this.handleRemove(this.noteId)} type=\"image\" src=\"https://www.pinclipart.com/picdir/big/240-2407973_tache-logo-of-accord-logo-of-cargill-clipart.png\"/>\n            \n                <br/>\n                <br/>\n\n                <h2>{this.noteContent}</h2>\n                <p>Created:{this.date}</p>\n                <p>Edited:{this.edited}</p>\n               \n                <p> {this.file} </p>\n                </div>\n        )\n\n    }\n}\n\nexport default Note","import React, { Component } from \"react\";\nimport \"./NoteForm.css\";\nimport Note from \"./Note\";\n\nclass NoteForm extends Component {\n  constructor() {\n    super();\n  }\n\n  addNote = () => {\n    this.props.addNote(this.textInput.value);\n    this.textInput.value = \"\";\n    this.textInput.focus();\n  };\n\n  render() {\n    return (\n      <div className=\"NoteForm\">\n        <input\n          ref={input => {\n            this.textInput = input;\n          }}\n          placeholder=\"Write a new note\"\n          type=\"textarea\"\n        />\n        <input onClick={this.addNote} type=\"button\" value=\"Add Note\" />\n      </div>\n    );\n  }\n}\nexport default NoteForm;\n","import React, { Component } from \"react\";\nimport \"./NoteAvatar.css\";\nimport fireConfig from \"../database/config\";\n\nclass NoteAvatar extends Component {\n  componentWillMount() {\n    this.getDataUser();\n  }\n\n  getDataUser = () => {\n    var user = fireConfig.auth().currentUser;\n    var tocken = user.accessToken;\n\n    if (user != null) {\n      this.name = user.displayName;\n      this.photo = user.photoURL;\n\n      if (this.photo == null && this.name == null) {\n        this.email = user.email;\n        this.photo = \"https://media.giphy.com/media/q4wcaEbmboPOE/giphy.gif\";\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Welcome</h1>\n        <img className=\"avatar\" src={this.photo}></img>\n        <h2>{this.name}</h2>\n        <h2>{this.email}</h2>\n      </div>\n    );\n  }\n}\n\nexport default NoteAvatar;\n    ","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Note from \"./components/Note\";\nimport NoteForm from \"./components/NoteForm\";\n//import NoteStart from './components/NoteStart';\nimport firebase from \"firebase\";\nimport fireConfig from \"./database/config\";\nimport \"firebase/database\";\nimport NoteAvatar from \"./components/NoteAvatar\";\nimport FileUpload from \"./components/Fileupload\";\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    //conection to firebase\n\n    this.db = fireConfig\n      .database()\n      .ref()\n      .child(\"notes\"); //colection named notes\n\n    this.state = {\n      notes: []\n    };\n  }\n\n  componentWillMount() {\n    const useruid = fireConfig.auth().currentUser.uid;\n\n    const prevNotes = this.state.notes;\n\n    this.db.on(\"child_added\", snap => {\n      prevNotes.push({\n        noteId: snap.key,\n        noteContent: snap.val().noteContent,\n        noteUid: snap.val().noteUid,\n        date: snap.val().date,\n        edited: snap.val().edited\n      });\n\n      this.setState({\n        notes: prevNotes\n      });\n    });\n\n    this.db.on(\"child_removed\", snap => {\n      for (var i = 0; i < prevNotes.length; i++) {\n        if (prevNotes[i].noteId === snap.key) {\n          prevNotes.splice(i, 1);\n        }\n      }\n\n      this.setState({\n        notes: prevNotes\n      });\n    });\n\n    this.db.on(\"child_changed\", snap => {\n      for (var i = 0; i < prevNotes.length; i++) {\n        if (prevNotes[i].noteId === snap.key) {\n          prevNotes[i] = snap.val();\n        }\n      }\n\n      this.setState({\n        notes: prevNotes\n      });\n    });\n  }\n\n  removeNote = noteId => {\n    this.db.child(noteId).remove();\n  };\n\n  addNote = note => {\n    var date = new Date();\n    var dia = date.getDate();\n    var mes = date.getMonth() + 1;\n    var hora = date.getHours();\n    var min = date.getMinutes();\n\n    this.db.push().set({\n      noteContent: note,\n      noteUid: fireConfig.auth().currentUser.uid,\n      date: dia + \"/\" + mes + \" \" + hora + \":\" + min,\n      edited: \"\"\n    });\n  };\n\n  logOut = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(result => console.log(\"Se ha cerrado sesion\"))\n      .catch(error => console.log(`Error ${error.code}: ${error.message} `));\n  };\n\n  render() {\n    const useruid = fireConfig.auth().currentUser.uid;\n\n    return (\n      <div className=\"notesContainer\">\n        <div className=\"notesHeader\">\n          <h2 className=\"dont\">Don´t forget-App</h2>\n          <p>by Karina</p>\n          <input\n            className=\"logout\"\n            onClick={this.logOut}\n            value=\"LogOut\"\n            type=\"image\"\n            src=\"https://media.giphy.com/media/3FjuotitkhOffmPamc/giphy.gif\"\n            title=\"LogOut\"\n          ></input>\n        </div>\n\n        <div className=\"noteStart\">\n          <NoteAvatar />\n        </div>\n\n        <div className=\"notesBody\">\n          <h1>My notes</h1>\n          {this.state.notes\n            .map(note => {\n              if (note.noteUid === useruid) {\n                return (\n                  <Note\n                    noteContent={note.noteContent}\n                    noteId={note.noteId}\n                    date={note.date}\n                    edited={note.edited}\n                    key={note.noteId}\n                    removeNote={this.removeNote}\n                    updateNote={this.updateNote}\n                    //file = {<FileUpload/>}\n                  />\n                );\n              }\n            })\n            .reverse()}\n        </div>\n\n        <div className=\"notesFooter\">\n          <NoteForm addNote={this.addNote} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, {Component} from \"react\";\nimport firebase from 'firebase';\nimport fireConfig from '../database/config';\n\n\n\n\nclass FileUpload extends Component{\n\n    constructor(){\n\n        super();\n\n        this.state = {\n\n            uploadValue: 0,\n            picture : null\n        };\n    }\n\n\n\n     handleUpload = (event) =>{\n\n        const file = event.target.files[0];\n        const storageRef = fireConfig.storage().ref(`/photos/${file.name}`);\n        const task = storageRef.put(file);\n\n        task.on('state_changed', snapshot =>{\n\n            let percentage = (snapshot.bytesTransferred / snapshot.totalBytes)*100;\n            this.setState({\n\n                uploadValue : percentage\n            })\n\n        },(error)=>{\n            console.log(error)\n        } , ()=>{\n\n            \n           this.setState({\n                uploadValue: 100,\n                picture: task.snapshot.getDownloadUrl     \n\n            })\n        })\n    }\n\n    render(){\n\n            return(\n\n                <div>\n\n                    <progress value = {this.state.uploadValue} max = \"100\" ></progress>\n                    <br/>\n                    <input type= \"file\" onChange= {this.handleUpload} />\n                    <br/>\n                    <img src={this.state.picture} />\n\n                </div>\n\n            )\n\n    }\n\n}\n\n\nexport default FileUpload;","import React, {Component} from 'react';\nimport fireConfig from './database/config'\nimport NoteStart from './components/NoteStart';\nimport App from './App'\n\n\nclass Start extends Component{\n\n    constructor(){\n        super();\n        this.state ={\n           user : null\n        }\n    }\n\n    componentDidMount(){\n        this.authListener();\n    }\n\n    authListener(){\n\n        fireConfig.auth().onAuthStateChanged((user)=>{\n\n            if(user){\n\n                this.setState({user});\n            }\n            else{\n\n                this.setState({user:null})\n            }\n\n        })\n\n\n    }\n\n    render(){\n\n        return(\n\n            <div>\n                {this.state.user ? (<App/>) : (<NoteStart/>)}\n            </div>\n             )\n    }\n\n}\n\n\nexport default Start;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Start from './Start'\n\n\nimport router from './router'\n\n\n\nReactDOM.render(<Start/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}